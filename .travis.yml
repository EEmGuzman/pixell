# Modified from https://github.com/joerick/cibuildwheel/blob/master/examples/travis-ci-test-and-deploy.yml
# In this configuration, the package is tested against multiple versions of python
# on Linux and on one version of Python on Windows. If and only if all tests pass
# will the wheels be built and deployed. Further, deployment is only initiated if
# the current branch is "master", the current commit is tagged, and the current
# repo is yours (e.g. it won't run on a Pull Request). For convenience, a source
# distribution is also created.

language: python
python:
  - 3.6
  - 3.7
  - 3.8

before_install:
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    brew update
    # Per the `pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>`_.
    brew install openssl readline
    # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
    # I didn't do this above because it works and I'm lazy.
    brew outdated pyenv || brew upgrade pyenv
    # virtualenv doesn't work without pyenv knowledge. venv in Python 3.3
    # doesn't provide Pip by default. So, use `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>`_.
    brew install pyenv-virtualenv
    pyenv install $PYTHON
    # I would expect something like ``pyenv init; pyenv local $PYTHON`` or
    # ``pyenv shell $PYTHON`` would work, but ``pyenv init`` doesn't seem to
    # modify the Bash environment. ??? So, I hand-set the variables instead.
    export PYENV_VERSION=$PYTHON
    export PATH="/Users/travis/.pyenv/shims:${PATH}"
    pyenv-virtualenv venv
    source venv/bin/activate
    # A manual check that the correct version of Python is running.
    python --version
    fi

install:
  - python3 -m pip install -U pip
  - python3 -m easy_install -U setuptools
  - python3 -m pip install pytest

script:
  - python3 -m pip install -r requirements.txt
  - python3 setup.py build_ext -i
  - py.test --cov=pixell tests/ -s
  - python3 setup.py install

stages:
  - test
  # Only execute deployment stage on tagged commits, and from your repository
  # (e.g. not PRs). Replace with your repo name.
  - name: deploy
    if: tag IS PRESENT AND repo = simonsobs/pixell
    # To only build tags that look like vX.Y.Z:
    #   if: tag =~ ^v\d+\.\d+\.\d+$ AND repo = simonsobs/pixell

jobs:
  include:

    # Deploy source distribution
    - stage: deploy
      name: Deploy source distribution
      install: skip
      script: python3 setup.py sdist --formats=gztar
      after_success: |
        python3 -m pip install twine
        python3 -m twine upload --skip-existing dist/*.tar.gz
    # Deploy on linux
    - stage: deploy
      name: Build and deploy Linux wheels
      services: docker
      install: python3 -m pip install cibuildwheel==1.4.2
      script: python3 -m cibuildwheel --output-dir wheelhouse
      after_success: |
        coveralls
        python3 -m pip install twine
        python3 -m twine upload --skip-existing wheelhouse/*.whl
    # Deploy on mac
    - stage: deploy
      name: Build and deploy macOS wheels
      os: osx
      language: shell
      install: python3 -m pip install cibuildwheel==1.4.2
      script: python3 -m cibuildwheel --output-dir wheelhouse
      after_success: |
        coveralls
        python3 -m pip install twine
        python3 -m twine upload --skip-existing wheelhouse/*.whl

env:
  global:
    - TWINE_USERNAME=__token__
    # Note: TWINE_PASSWORD is set to a PyPI API token in Travis settings
    - CIBW_BEFORE_BUILD="pip install numpy scipy cython"      
    - CIBW_BUILD="cp3?-*"
